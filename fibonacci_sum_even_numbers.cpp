//
// From Project Euler:
//
//      https://projecteuler.net/problem=2
//
//      Even Fibonacci numbers
//
//      Each new term in the Fibonacci sequence is generated by adding the previous two terms.
//      By starting with 1 and 2, the first 10 terms will be:
//
//      1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
//      By considering the terms in the Fibonacci sequence whose values do not exceed four million,
//      find the sum of the even-valued terms.
//

#include <iostream>


class FibonacciSequenceGenerator
{
public:

    FibonacciSequenceGenerator()
    {
        resetState();
    }

    uint32_t getNextNumber()
    {
        uint32_t nextFibNum = 0;

        if (0 == prevNum)
        {
            // the first number in the Fibonacci sequence is 1
            nextFibNum = 1;

            prevNum = nextFibNum;
        }
        else if (1 == prevNum)
        {
            // the second number in the Fibonacci sequence is 2
            nextFibNum = 2;

            prevNumMinusOne = prevNum;
            prevNum = nextFibNum;
        }
        else
        {
            nextFibNum = (prevNum + prevNumMinusOne);

            prevNumMinusOne = prevNum;
            prevNum = nextFibNum;
        }

        return nextFibNum;
    }

    void reset()
    {
        resetState();
    }

private:

    void resetState()
    {
        prevNum = 0;
        prevNumMinusOne = 0;
    }

    uint32_t prevNum;
    uint32_t prevNumMinusOne;
};


int main(void)
{
    FibonacciSequenceGenerator fiboSequenceGenerator;

    const ulong LIMIT = 4000000;
    uint32_t nextFibNumber = 0;
    unsigned long long fibSum = 0ULL;

    while ((nextFibNumber = fiboSequenceGenerator.getNextNumber()) < LIMIT)
    {
        if ((nextFibNumber % 2) == 0)
        {
            std::cout << "Fibonacci number for sum is: " << nextFibNumber << '\n';
            fibSum += nextFibNumber;
        }
    }
    std::cout << "*** Fibonacci number past LIMIT is: " << nextFibNumber << '\n';

    std::cout << "Sum is: " << fibSum << '\n';

    return 0;
}
